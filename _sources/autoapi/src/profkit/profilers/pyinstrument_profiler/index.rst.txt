:py:mod:`src.profkit.profilers.pyinstrument_profiler`
=====================================================

.. py:module:: src.profkit.profilers.pyinstrument_profiler

.. autoapi-nested-parse::

   Profiler.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   src.profkit.profilers.pyinstrument_profiler.PyInstrumentProfiler




.. py:class:: PyInstrumentProfiler(settings: Optional[profkit.settings.ProfilerSettings] = None)


   Bases: :py:obj:`profkit.profilers.profiler.Profiler`

   PyInstrumentProfiler class.

   Args:
       settings: Profiler settings.

   .. py:method:: begin() -> Any

      PyInstrumentProfiler.begin.

      Begin profiling.

      Returns:
          Any


   .. py:method:: end() -> Any

      PyInstrumentProfiler.end.

      End profiling.

      Returns:
          Any


   .. py:method:: output(output_type: profkit.profilers.profiler.Profiler.OutputType = Profiler.OutputType.TEXT) -> Any

      PyInstrumentProfiler.export.

      Exports profiler output in specified format.

      Args:
          output_type: Output type.

      Returns:
          Output in specified format.


   .. py:method:: print(verbose: bool = False) -> None

      PyInstrumentProfiler.end.

      End profiling.

      Args:
          verbose: If True, prints more detailed info.

      Returns:
          Any


   .. py:method:: save(output_type: profkit.profilers.profiler.Profiler.OutputType = Profiler.OutputType.TEXT, filepath: str = 'profkit.out') -> None

      PyInstrumentProfiler.save.

      End profiling.

      Args:
          output_type: Output type.
          filepath: Path to file where output will be saved.

      Returns:
          Any



